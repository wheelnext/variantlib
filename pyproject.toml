[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.distutils.bdist_wheel]
universal = true

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["variantlib*"]
exclude = ["tests*", "*.tests", "*.tests.*"]
namespaces = true

[project]
name = "variantlib"
version = "0.0.1.dev1"
description = "A library to provide support for variants"
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
authors = [
    { name = "Jonathan Dekhtiar", email = "jonathan@dekhtiar.com" },
    { name = "Michael Sarahan", email = "msarahan@nvidia.com" },
]
maintainers = [
    { name = "Jonathan Dekhtiar", email = "jonathan@dekhtiar.com" },
    { name = "Michael Sarahan", email = "msarahan@nvidia.com" },
]
dependencies = [
    "importlib-metadata; python_version < '3.10'",
    "platformdirs>=4.3,<5.0",
    "tomli; python_version < '3.11'",
    "typing-extensions; python_version < '3.11'",
]

[project.optional-dependencies]
cli = [
]
dev = [
    "check-manifest",
    # Pre Commit Hooks
    "pre-commit>=4,<5",
    # Linting
    "ruff>=0.10,<1.0",
]
test = [
    "jsondiff>=2.2,<2.3",
    "hypothesis>=6.0.0,<7",
    "pytest>=8.0.0,<9.0.0",
    "pytest-cov>=5.0.0,<6.0.0",
    "pytest-dotenv>=0.5.0,<1.0.0",
    "pytest-env>=1.1.3,<2.0.0",
    "pytest-mock>=3.14.0,<4.0.0",
    "pytest-runner>=6.0.0,<7.0.0",
    "pytest-ordering>=0.6,<1.0.0",
    "parameterized>=0.9.0,<0.10",
]

[project.scripts]
variantlib = "variantlib.commands.main:main"

[project.entry-points."variantlib.actions"]
analyze_wheel = "variantlib.commands.analyze_wheel:analyze_wheel"
analyze_platform = "variantlib.commands.analyze_platform:analyze_platform"
generate_index_json = "variantlib.commands.generate_index_json:generate_index_json"
make_variant = "variantlib.commands.make_variant:make_variant"
plugins = "variantlib.commands.plugins.main:main"

[project.entry-points."variantlib.actions.plugins"]
list = "variantlib.commands.plugins.list_plugins:list_plugins"
get-all-configs = "variantlib.commands.plugins.get_all_configs:get_all_configs"
get-supported-configs = "variantlib.commands.plugins.get_supported_configs:get_supported_configs"

[tool.pytest.ini_options]
testpaths = ["tests/"]
addopts = "-vvv --cov=variantlib --cov-report=term-missing"

[tool.mypy]
disallow_untyped_defs = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
check_untyped_defs = true

[[tool.mypy.overrides]]
module = ["jsondiff"]
ignore_missing_imports = true
